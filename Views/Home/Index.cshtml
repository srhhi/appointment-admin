@model TLCOnline.Models.HomeModel

@{
    ViewData["Title"] = Labels.Dashboard;
    int i = 1;
}

<div class="container mt-4">
    <h1 class="h2">@Labels.Dashboard</h1><br />

    <div class="row">
        <div class="col-md-3">
            <div class="card text-white bg-primary mb-3">
                <div class="card-header">@Labels.TotalAppoint</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalAppointments</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success mb-3">
                <div class="card-header">@Labels.TotalStaff</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalStaff</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-info mb-3">
                <div class="card-header">@Labels.TotalCust</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalCustomers</h5>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning mb-3">
                <div class="card-header">@Labels.TotalLaser</div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TotalLasers</h5>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <h2 class="mt-4">@Labels.Chart</h2><br />
    <div class="row">
        <div class="col-md-4">
            <center><h6>@Labels.NoOfAppointByStatus</h6></center>
            <canvas id="pieChart" width="400" height="400"></canvas>
        </div>
        <div class="col-md-4">
            <center><h6>@Labels.NoOfAppointsByLaserName</h6></center>
            <canvas id="doughnutChart" width="400" height="400"></canvas>
        </div>
        <div class="col-md-4">
            <center><h6>@Labels.NoOfCustByGender</h6></center>
            <canvas id="pieChartGender" width="400" height="400"></canvas>
        </div>
    </div><br />

    <!-- Upcoming Appointments Section -->
    <h2 class="mt-4">@Labels.UpcomingAppoint</h2><br />
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th>@Labels.No</th>
                    <th>@Labels.CustName</th>
                    <th>@Labels.LaserName</th>
                    <th>@Labels.AssignedTo</th>
                    <th>@Labels.AppointDate</th>
                    <th>@Labels.AppointTime</th>
                    <th>@Labels.Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model.UpcomingAppointments)
                {
                    <tr>
                        <td>@i</td>
                        <td>@appointment.CustomerName</td>
                        <td>@appointment.LaserName</td>
                        <td>@appointment.StaffName</td>
                        <td>@appointment.AppointDate.ToString("dd/MM/yyyy")</td>
                        <td>@appointment.AppointTime</td>
                        <td>@appointment.Status</td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var ctxPie = document.getElementById('pieChart').getContext('2d');
            new Chart(ctxPie, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.AppointmentsByStatusLabels)),
                    datasets: [{
                        label: 'AppointmentsByStatus',
                        data: @Html.Raw(Json.Serialize(Model.AppointmentsByStatusValues)),
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(255, 99, 132, 0.2)'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' appointments';
                                }
                            }
                        }
                    }
                }
            });

            var ctxPieGender = document.getElementById('pieChartGender').getContext('2d');
            new Chart(ctxPieGender, {
                type: 'pie',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.CustomersByGenderLabels)),
                    datasets: [{
                        label: 'CustomersByGender',
                        data: @Html.Raw(Json.Serialize(Model.CustomersByGenderValues)),
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(255, 99, 132, 0.2)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' customers';
                                }
                            }
                        }
                    }
                }
            });

            var ctxDoughnut = document.getElementById('doughnutChart').getContext('2d');
            new Chart(ctxDoughnut, {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.AppointmentsByLaserLabels)),
                    datasets: [{
                        label: 'AppointmentsByLaser',
                        data: @Html.Raw(Json.Serialize(Model.AppointmentsByLaserValues)),
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(75, 192, 96, 0.2)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(75, 192, 96, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem) {
                                    return tooltipItem.label + ': ' + tooltipItem.raw + ' appointments';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}